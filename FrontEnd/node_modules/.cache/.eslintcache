[{"/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/index.js":"1","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/App.js":"2","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/ResetPassword.js":"3","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Signup.js":"4","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Login.js":"5","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Navbar.js":"6","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Recruiter/MyJobs.js":"7","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Recruiter/AddJob/AddJob.js":"8","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/lib/isAuth.js":"9","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Recruiter/DeleteJob.js":"10","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Recruiter/EditJob.js":"11","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/reducer/jobReducer.js":"12"},{"size":543,"mtime":1646297659128,"results":"13","hashOfConfig":"14"},{"size":1240,"mtime":1646297467974,"results":"15","hashOfConfig":"14"},{"size":2285,"mtime":1646292412056,"results":"16","hashOfConfig":"14"},{"size":5897,"mtime":1646292412056,"results":"17","hashOfConfig":"14"},{"size":5863,"mtime":1646292412054,"results":"18","hashOfConfig":"14"},{"size":2972,"mtime":1646292412054,"results":"19","hashOfConfig":"14"},{"size":5802,"mtime":1646297320561,"results":"20","hashOfConfig":"14"},{"size":6730,"mtime":1646296990895,"results":"21","hashOfConfig":"14"},{"size":166,"mtime":1646292412057,"results":"22","hashOfConfig":"14"},{"size":0,"mtime":1646296972220,"results":"23","hashOfConfig":"14"},{"size":4742,"mtime":1646297293738,"results":"24","hashOfConfig":"14"},{"size":914,"mtime":1646297437374,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o27piq",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/index.js",[],[],"/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/App.js",["70"],[],"import { Route, Routes } from 'react-router-dom';\nimport { ToastContainer } from \"react-toastify\";\n\nimport Navbar from './component/Navbar';\nimport Login from './component/Login';\nimport Signup from './component/Signup';\nimport ResetPassword from './component/ResetPassword';\nimport AddJob from './component/Recruiter/AddJob/AddJob';\nimport MyJobs from './component/Recruiter/MyJobs';\nimport EditJob from './component/Recruiter/EditJob';\nimport DeleteJob from './component/Recruiter/DeleteJob';\n\nfunction App() {\n  const user = localStorage.getItem('token');\n  return (\n    <>\n      <ToastContainer />\n      <Routes>\n        {/* {user && <Route path=\"/\" exact element={<Navbar />} />} */}\n        <Route path=\"/\" element={<Navbar />} exact />\n\n        <Route path=\"/login\" element={<Login />} exact />\n\n        <Route path=\"/signup\" element={<Signup />} exact />\n\n        <Route path=\"/resetpassword\" element={<ResetPassword />} exact />\n\n        <Route path=\"/addjob\" element={<AddJob />} exact />\n\n        <Route path=\"/myjob\" element={<MyJobs />} exact />\n\n        <Route path=\"/editjob\" element={<EditJob />} exact />\n\n        <Route path=\"/deletejob\" element={<DeleteJob/>} exact />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n",["71","72"],"/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/ResetPassword.js",["73","74","75"],[],"import {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n} from '@material-ui/core';\n\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect, useRef } from 'react';\n\nimport Navbar from './Navbar';\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst ResetPassword = (props) => {\n  const classes = useStyles();\n\n  const emailRef = useRef();\n\n  const url = 'http://localhost:5000/users/sendemail';\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    axios\n      .post(url, {\n        data: { email: emailRef.current.value },\n      })\n      .then((res) => {\n        console.log(res);\n      });\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <Paper elevation={3} className={classes.body}>\n        <Navbar />\n        <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h2\">\n              Reset Password\n            </Typography>\n          </Grid>\n          {/* <Grid item>\n          <TextField\n            id=\"txtPassword\"\n            type=\"password\"\n            label=\"Password\"\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"txtConfirmPassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            className={classes.inputBox}\n          />\n        </Grid> */}\n          <Grid item>\n            <TextField\n              id=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              ref={emailRef}\n              className={classes.inputBox}\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              id=\"btnSubmit\"\n              variant=\"contained\"\n              className={classes.submitButton}\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </form>\n  );\n};\n\nexport default ResetPassword;\n","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Signup.js",["76","77","78"],[],"import {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\n\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Navbar from './Navbar';\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst Signup = () => {\n  const classes = useStyles();\n\n  const url = 'http://localhost:5000/users/register';\n\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    password: '',\n    cpassword: '',\n    types: '',\n  });\n\n  const submitHandler = async (e) => {\n    // try {\n    //   let response = await axios.post(url, {\n    //     username: user.username,\n    //     email: user.email,\n    //     password: user.password,\n    //     cpassword: user.cpassword,\n    //     type: user.type,\n    //   });\n\n    //   if (response.status === 200) {\n    //     toast.success('Added');\n    //   }\n    // } catch (e) {\n    //   toast.error('Somthing went wrong');\n    // }\n    console.log(user);\n    axios\n      .post(url, {\n        username: user.username,\n        email: user.email,\n        password: user.password,\n        cpassword: user.cpassword,\n        types: user.types,\n      })\n      .then((res) => {\n        console.log('hii' + res.user);\n      });\n  };\n\n  const inputHandler = (key, value) => {\n    // console.log(user);\n    setUser({\n      ...user,\n      [key]: value,\n    });\n  };\n\n  // const inputHandler = (e) => {\n  //   e.preventDefault();\n  //   // console.log(user.types);\n  //   const newdata = { ...user };\n  //   console.log(newdata);\n  //   newdata[e.target.id] = e.target.value;\n  //   setUser(newdata);\n  //   console.log(newdata);\n  // };\n\n  // const [username, setusername] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [type, setType] = useState('');\n  // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n\n  // const submitHandler = async (e) => {\n  //   e.preventDefault();\n  //   console.log(username, email, password, type);\n\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-type': 'application/json',\n  //         'Access-Control-Allow-Origin': '*',\n  //       },\n  //     };\n\n  //     setLoading(true);\n  //     const { data } = await axios.post(\n  //       'http://localhost:3000/users/register',\n  //       {\n  //         username,\n  //         email,\n  //         password,\n  //         type,\n  //       },\n  //       config\n  //     );\n\n  //     console.log(data);\n\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     setLoading(false);\n  //   } catch (e) {\n  //     console.log('Error' + e);\n  //     // setError(e.response.data.message);\n  //   }\n  // };\n\n  return (\n    <Paper elevation={3} className={classes.body}>\n      <Navbar />\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\" component=\"h2\">\n            Signup\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"username\"\n            type=\"text\"\n            label=\"Username\"\n            className={classes.inputBox}\n            onChange={(event) => {\n              inputHandler('username', event.target.value);\n            }}\n            value={user.username}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"email\"\n            type=\"email\"\n            label=\"Email\"\n            className={classes.inputBox}\n            onChange={(event) => {\n              inputHandler('email', event.target.value);\n            }}\n            value={user.email}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            className={classes.inputBox}\n            onChange={(event) => {\n              inputHandler('password', event.target.value);\n            }}\n            value={user.password}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"cpassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            className={classes.inputBox}\n            onChange={(event) => {\n              inputHandler('cpassword', event.target.value);\n            }}\n            value={user.cpassword}\n          />\n        </Grid>\n        <Grid item>\n          <FormControl fullWidth className={classes.inputBox}>\n            <InputLabel>Type</InputLabel>\n            <Select\n              id=\"types\"\n              onChange={(event) => {\n                inputHandler('types', event.target.value);\n              }}\n              value={user.types}\n            >\n              <MenuItem value=\"applicant\">Applicant</MenuItem>\n              <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Button\n            id=\"btnSignup\"\n            variant=\"contained\"\n            className={classes.submitButton}\n            type=\"submit\"\n            onClick={submitHandler}\n          >\n            Signup\n          </Button>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle2\">\n            <Link to=\"/Login\" className={classes.LinkColor}>\n              Already have an Account?\n            </Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Signup;\n","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Login.js",["79","80","81"],[],"import {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n} from '@material-ui/core';\n\nimport { useState, useEffect } from 'react';\nimport { Link, useHref } from 'react-router-dom';\nimport axios from 'axios';\nimport isAuth from '../lib/isAuth';\n\n// import cors from 'cors';\nimport Navbar from './Navbar';\n\n// makeStyles use for CSS\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '0px 15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n\n  // let history = useHistory();\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n\n  // const submitHandler = async (e) => {\n  //   e.preventDefault();\n  //   console.log(email, password);\n\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-type': 'application/json',\n  //       },\n  //     };\n\n  //     setLoading(true);\n  //     const { data } = await axios.post('localhost:3000/users/login', {\n  //       email,\n  //       password,\n  //     });\n\n  //     console.log(data);\n\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     setLoading(false);\n  //   } catch (e) {\n  //     console.log('Erroe' + e);\n  //     // setError(e.response.data.message);\n  //   }\n  // };\n\n  // const url = 'http://localhost:5000/users/login';\n\n  // const [user, setUser] = useState({\n  //   email: '',\n  //   password: '',\n  // });\n\n  // const submitHandler = (e) => {\n  //   e.preventDefault();\n  //   axios\n  //     .post(url, {\n  //       email: user.email,\n  //       password: user.password,\n  //     })\n  //     .then((res) => {\n  //       console.log(res.user);\n  //     });\n  // };\n\n  // const inputHandler = (e) => {\n  //   e.preventDefault();\n  //   const newdata = { ...user };\n  //   console.log(newdata);\n  //   newdata[e.target.id] = e.target.value;\n  //   setUser(newdata);\n  //   console.log(newdata);\n  // };\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const inputHandler = (key, value) => {\n    // e.preventDefault();\n    setData({\n      ...data,\n      [key]: value,\n    });\n  };\n  //setData({ ...data, [input.name]: input.value });\n\n  const submitHandler = () => {\n    console.log(data);\n\n    // console.log(e.target.value);\n    // setJobType();\n\n    const url = 'http://localhost:5000/users/login';\n\n    axios\n      .post(url, { email: data.email, password: data.password })\n      .then((res) => {\n        console.log(res.data);\n        let t = localStorage.setItem('token', res.data.token);\n        console.log('token' + t);\n        localStorage.setItem('type', res.data.type);\n        setLoggedin(isAuth());\n        console.log('Logged in successfully');\n        console.log(res);\n      })\n      .catch((e) => {\n        console.log('Erroe' + e);\n      });\n  };\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   // try {\n  //   // const url = 'http://localhost:5000/users/login';\n  //   //   const { data: res } = await axios.post(url, data);\n\n  //   //   localStorage.setItem('token', res.data.token);\n\n  //   //   window.location = '/home';\n  //   // } catch (error) {\n  //   //   console.log('Error' + error);\n  //   // }\n\n  //   const url = 'http://localhost:5000/users/login';\n  //   axios\n  //     .post(url, {\n  //       email: data.email,\n  //       password: data.password,\n  //     })\n  //     .then((res) => {\n  //       console.log(res.user);\n  //       localStorage.setItem('token', res.data.token);\n  //       localStorage.setItem('types', res.data.types);\n  //       setLoggedin(isAuth());\n  //       console.log('Logged in successfully');\n  //       console.log(res);\n  //     });\n  // };\n\n  return (\n    // Paper use as container , elevation - for shadow\n\n    <Paper elevation={3} className={classes.body}>\n      <Navbar />\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          {/*  Typography use for size or different heading tag */}\n\n          <Typography variant=\"h4\" component=\"h2\">\n            Login\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"email\"\n            type=\"text\"\n            label=\"Email\"\n            className={classes.inputBox}\n            value={data.email}\n            onChange={(event) => inputHandler('email', event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            className={classes.inputBox}\n            value={data.password}\n            onChange={(event) => inputHandler('password', event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle2\">\n            <Link to=\"/resetpassword\" className={classes.LinkColor}>\n              Forgot Password?\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            id=\"btnLogin\"\n            variant=\"contained\"\n            type=\"submit\"\n            className={classes.submitButton}\n            onClick={submitHandler}\n          >\n            Login\n          </Button>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle2\">\n            <Link to=\"/Signup\" className={classes.LinkColor}>\n              Create an Account?\n            </Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Login;\n","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Navbar.js",[],[],"/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Recruiter/MyJobs.js",["82","83","84","85","86","87"],[],"import React from \"react\";\nimport AddJob from \"./AddJob/AddJob\";\nimport Navbar from \"../Navbar\";\n\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableContainer,\n  TableHead,\n} from \"@material-ui/core\";\n\nimport {Icon, DeleteIcon} from '@mui/material'\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: \"60px 60px\",\n    margin: \"125px 350px\",\n  },\n  inputBox: {\n    width: \"300px\",\n    margin: \"-12px\",\n  },\n  submitButton: {\n    width: \"300px\",\n    margin: \"0px 15px\",\n    backgroundColor: \"#034f84\",\n    color: \"white\",\n  },\n  LinkColor: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  tableBody: {\n    margin: \"130px 300px\",\n  },\n  heading: {\n    marginBottom: \"60px \",\n  },\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  backgroundColor: theme.palette.common,\n  fontSize: 14,\n  align: \"left\",\n  padding: 20,\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n  },\n}));\n\nconst MyJobs = (props) => {\n  const classes = useStyles();\n\n  const jobs = useSelector((state) => state);\n\n  const dispatch = useDispatch();\n\n  const history = useNavigate();\n\n  const editJob = (e) => {\n    // e.preventDefault();\n    history(\"/editjob\");\n  }\n\n  const deleteJob = (e) => {\n    // e.preventDefault();\n    history(\"/deletejob\");\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className={classes.tableBody}>\n        <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n          <Grid item>\n            <div className={classes.heading}>\n              <Typography variant=\"h4\" component=\"h2\">\n                My Jobs\n              </Typography>\n            </div>\n          </Grid>\n        </Grid>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Sr. No </StyledTableCell>\n                <StyledTableCell>Title</StyledTableCell>\n                <StyledTableCell>Skills</StyledTableCell>\n                <StyledTableCell>Salary</StyledTableCell>\n                <StyledTableCell>Position</StyledTableCell>\n                <StyledTableCell>Job Types</StyledTableCell>\n                <StyledTableCell>Edit</StyledTableCell>\n                <StyledTableCell>Delete</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {jobs.map((job, id) => (\n                <StyledTableRow>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    {id}\n                  </StyledTableCell>\n                  <StyledTableCell>{job.title}</StyledTableCell>\n                  <StyledTableCell>{job.skill}</StyledTableCell>\n                  <StyledTableCell>{job.salary}</StyledTableCell>\n                  <StyledTableCell>{job.position}</StyledTableCell>\n                  <StyledTableCell>{job.jobType}</StyledTableCell>\n                  <StyledTableCell>\n                  <Button variant=\"outlined\" onClick={() => editJob()}>Edit</Button>\n                  </StyledTableCell>\n                  <StyledTableCell>\n                  <Button variant=\"outlined\" onClick={() => deleteJob()}>Delete</Button>\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </>\n    // <div className=\"container\">\n    //   <div className=\"row d-flex flex-column\">\n    //     <Link to=\"/add\" className=\"btn btn-outline-dark my-5 ml-auto \">\n    //       My Job\n    //     </Link>\n    //   </div>\n    //   <div className=\"col-md-10 mx-auto my-4\">\n    //     <table className=\"table table-hover\">\n    //       <thead className=\"table-header bg-dark text-white\">\n    //         <tr>\n    //           <th scope=\"col\">Id</th>\n    //           <th scope=\"col\">Title</th>\n    //           <th scope=\"col\">Skill</th>\n    //           <th scope=\"col\">Job Type</th>\n    //           <th scope=\"col\">Salary</th>\n    //           <th scope=\"col\">Position</th>\n    //         </tr>\n    //       </thead>\n    //       <tbody>\n    //         {jobs.map((job, id) => (\n    //           <tr key={id}>\n    //             <td>{id + 1}</td>\n    //             <td>{job.title}</td>\n    //             <td>{job.skill}</td>\n    //             <td>{job.jobType}</td>\n    //             <td>{job.salary}</td>\n    //             <td>{job.position}</td>\n    //             <td>\n    //               <Link\n    //                 to=\"/\"\n    //                 // to={`/edit/${contact.id}`}\n    //                 className=\"btn btn-small btn-primary mr-2\"\n    //               >\n    //                 Edit\n    //               </Link>\n    //               <button\n    //                 type=\"button\"\n    //                 // onClick={() => deleteContact(contact.id)}\n    //                 className=\"btn btn-sm btn-danger\"\n    //               >\n    //                 Delete\n    //               </button>\n    //             </td>\n    //             {/* <td>\n    //               <Link\n    //                 to={`/edit/${contact.id}`}\n    //                 className=\"btn btn-small btn-danger mr-2\"\n    //               >\n    //                 Delete\n    //               </Link>\n    //             </td> */}\n    //           </tr>\n    //         ))}\n    //       </tbody>\n    //     </table>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default MyJobs;\n","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Recruiter/AddJob/AddJob.js",[],[],"/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/lib/isAuth.js",[],[],"/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Recruiter/DeleteJob.js",[],[],"/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/component/Recruiter/EditJob.js",["88","89"],[],"import React, { useState } from \"react\";\n\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nimport Navbar from \"../Navbar\";\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: \"60px 60px\",\n    margin: \"125px 350px\",\n  },\n  inputBox: {\n    width: \"300px\",\n    margin: \"-12px\",\n  },\n  submitButton: {\n    width: \"300px\",\n    margin: \"0px 15px\",\n    backgroundColor: \"#034f84\",\n    color: \"white\",\n  },\n  LinkColor: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nconst EditJob = (props) => {\n  const classes = useStyles();\n\n  const [jobDetail, setjobDetail] = useState({\n    title: \"\",\n    skill: \"\",\n    jobType: \"\",\n    salary: 0,\n    position: 0,\n  });\n\n  const jobs = useSelector((state) => state);\n  console.log(jobs);\n\n  const dispatch = useDispatch();\n\n  const history = useNavigate();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(jobDetail);\n\n    const data = {\n      id: jobs[jobs.length - 1].id + 1,\n      ...jobDetail,\n      //  jobDetail.title,\n      //  jobDetail.skill,\n      //  jobDetail.jobType,\n      //  jobDetail.position,\n      //  jobDetail.salary,\n    };\n    console.log(data);\n\n    dispatch({ type: \"UPDATE_JOB\", payload: data });\n    //  toast.success(\"Updated\");\n    history(\"/myjob\");\n\n    // const url = \"http://localhost:5000/recruiter/addjob\";\n\n    // axios\n    //   .post(url, {\n    //     title: jobDetail.title,\n    //     skill: jobDetail.skill,\n    //     jobType: jobDetail.jobType,\n    //     salary: jobDetail.salary,\n    //     position: jobDetail.position,\n    //   })\n    //   .then((res) => {\n    //     console.log(res.jobDetail);\n    //   });\n  };\n\n  const inputHandler = (key, value) => {\n    // e.preventDefault();\n    setjobDetail({\n      ...jobDetail,\n      [key]: value,\n    });\n  };\n\n  return (\n    <Paper elevation={3} className={classes.body}>\n      <Navbar />\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\" component=\"h2\">\n            Edit Jobs\n          </Typography>\n        </Grid>\n\n        <Grid item>\n          <TextField\n            id=\"title\"\n            type=\"text\"\n            label=\"Title\"\n            className={classes.inputBox}\n            value={jobDetail.title}\n            onChange={(event) => {\n              inputHandler(\"title\", event.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            id=\"skill\"\n            type=\"text\"\n            label=\"Skill\"\n            className={classes.inputBox}\n            value={jobDetail.skill}\n            onChange={(event) => {\n              inputHandler(\"skill\", event.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <FormControl fullWidth className={classes.inputBox}>\n            <InputLabel>Job Type</InputLabel>\n            <Select\n              id=\"jobtype\"\n              value={jobDetail.jobType}\n              onChange={(event) => {\n                inputHandler(\"jobType\", event.target.value);\n              }}\n            >\n              <MenuItem disabled value=\"\">\n                Select\n              </MenuItem>\n              <MenuItem value=\"Full Time\">Full Time</MenuItem>\n              <MenuItem value=\"Part Time\">Part Time</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item>\n          <TextField\n            id=\"salary\"\n            type=\"text\"\n            label=\"Salary\"\n            className={classes.inputBox}\n            value={jobDetail.salary}\n            onChange={(event) => {\n              inputHandler(\"salary\", event.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            id=\"position\"\n            type=\"position\"\n            label=\"Position\"\n            className={classes.inputBox}\n            value={jobDetail.position}\n            onChange={(event) => {\n              inputHandler(\"position\", event.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <Link to=\"/myjob\" className={classes.LinkColor}>\n            <Button\n              id=\"btnSubmit\"\n              variant=\"contained\"\n              type=\"submit\"\n              className={classes.submitButton}\n              onClick={submitHandler}\n            >\n              Submit\n            </Button>\n          </Link>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default EditJob;\n","/Users/imac/Desktop/Parthvi/Git Clone/Ref/FrontEnd/src/reducer/jobReducer.js",["90"],[],"const initialState = [\n    {\n      id: 0,\n      title: \"test\",\n      skill: \"node\",\n      salary: 2000,\n      jobType: \"full Time\",\n      position: 10,\n    },\n    {\n      id: 1,\n      title: \"t1\",\n      skill: \"react\",\n      salary: 5000,\n      jobType: \"part Time\",\n      position: 6,\n    },\n  ];\n  \n  const jobReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case \"ADD_JOB\":\n        state = [...state, action.payload];\n      case \"UPDATE_JOB\":\n        const updatestate = state.map((job) =>\n          job.id === action.payload.id ? action.payload : job\n        );\n        state = updatestate;\n        return state;\n      case \"DELETE_JOB\":\n        const jobFilter = state.filter((job) =>\n          job.id === action.payload ? null : job\n        );\n        state = jobFilter;\n        return state;\n      default:\n        return state;\n    }\n  };\n  \n  export default jobReducer;\n  \n  ",{"ruleId":"91","severity":1,"message":"92","line":14,"column":9,"nodeType":"93","messageId":"94","endLine":14,"endColumn":13},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"91","severity":1,"message":"99","line":10,"column":10,"nodeType":"93","messageId":"94","endLine":10,"endColumn":14},{"ruleId":"91","severity":1,"message":"100","line":12,"column":10,"nodeType":"93","messageId":"94","endLine":12,"endColumn":18},{"ruleId":"91","severity":1,"message":"101","line":12,"column":20,"nodeType":"93","messageId":"94","endLine":12,"endColumn":29},{"ruleId":"91","severity":1,"message":"101","line":16,"column":20,"nodeType":"93","messageId":"94","endLine":16,"endColumn":29},{"ruleId":"91","severity":1,"message":"102","line":17,"column":10,"nodeType":"93","messageId":"94","endLine":17,"endColumn":15},{"ruleId":"91","severity":1,"message":"103","line":17,"column":17,"nodeType":"93","messageId":"94","endLine":17,"endColumn":31},{"ruleId":"91","severity":1,"message":"101","line":10,"column":20,"nodeType":"93","messageId":"94","endLine":10,"endColumn":29},{"ruleId":"91","severity":1,"message":"104","line":11,"column":16,"nodeType":"93","messageId":"94","endLine":11,"endColumn":23},{"ruleId":"91","severity":1,"message":"105","line":105,"column":10,"nodeType":"93","messageId":"94","endLine":105,"endColumn":18},{"ruleId":"91","severity":1,"message":"106","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"107","line":20,"column":9,"nodeType":"93","messageId":"94","endLine":20,"endColumn":13},{"ruleId":"91","severity":1,"message":"108","line":20,"column":15,"nodeType":"93","messageId":"94","endLine":20,"endColumn":25},{"ruleId":"91","severity":1,"message":"99","line":23,"column":23,"nodeType":"93","messageId":"94","endLine":23,"endColumn":27},{"ruleId":"91","severity":1,"message":"102","line":25,"column":10,"nodeType":"93","messageId":"94","endLine":25,"endColumn":15},{"ruleId":"91","severity":1,"message":"109","line":76,"column":9,"nodeType":"93","messageId":"94","endLine":76,"endColumn":17},{"ruleId":"91","severity":1,"message":"110","line":16,"column":8,"nodeType":"93","messageId":"94","endLine":16,"endColumn":13},{"ruleId":"91","severity":1,"message":"102","line":19,"column":10,"nodeType":"93","messageId":"94","endLine":19,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":24,"column":7,"nodeType":"113","messageId":"114","endLine":29,"endColumn":22},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["115"],"no-negated-in-lhs",["116"],"'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'toast' is defined but never used.","'ToastContainer' is defined but never used.","'useHref' is defined but never used.","'loggedin' is assigned a value but never used.","'AddJob' is defined but never used.","'Icon' is defined but never used.","'DeleteIcon' is defined but never used.","'dispatch' is assigned a value but never used.","'axios' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation"]