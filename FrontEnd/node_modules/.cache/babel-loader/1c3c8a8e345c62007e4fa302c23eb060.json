{"ast":null,"code":"var _jsxFileName = \"/home/cool/Desktop/Parthvi/References/try2/try2-navbar/FrontEnd/src/component/Recruiter/AddJob.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Paper, Typography, Button, TextField, makeStyles, FormControl, Select, MenuItem, InputLabel } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from '../Navbar'; // makeStyles use for CSS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px'\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px'\n  },\n  submitButton: {\n    width: '300px',\n    margin: '0px 15px',\n    backgroundColor: '#034f84',\n    color: 'white'\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black'\n  }\n}));\n\nconst AddJob = () => {\n  _s();\n\n  const classes = useStyles(); // const handleSubmit = (e) => {\n  //   // e.preventDefault();\n  //   // console.log(jobTypes);\n  //   // console.log(e.target.value);\n  //   // setJobType();\n  //   const url = 'http://localhost:5000/users/register';\n  //   axios\n  //     .post(url, {\n  //       jobType: jobTypes,\n  //       // types: user.types,\n  //     })\n  //     .then((res) => {\n  //       console.log(res.user);\n  //     });\n  // };\n  // const [selected, setSelected] = useState('');\n  // const inputHandler = (e) => {\n  //   e.preventDefault();\n  //   // const data = setSelected(e.target.selected);\n  //   // console.log(data);\n  //   const newdata = { ...selected };\n  //   console.log(newdata);\n  //   newdata[e.target.id] = e.target.value;\n  //   setSelected(newdata);\n  //   console.log(newdata);\n  // };\n  // return (\n  //   // Paper use as container , elevation - for shadow\n  //   <form>\n  //     <Paper elevation={3} className={classes.body}>\n  //       <Navbar />\n  //       <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n  //         <Grid item>\n  //           {/*  Typography use for size or different heading tag */}\n  //           <Typography variant=\"h4\" component=\"h2\">\n  //             Add Jobs\n  //           </Typography>\n  //         </Grid>\n  //         <Grid item>\n  //           <TextField\n  //             id=\"title\"\n  //             type=\"text\"\n  //             label=\"Title\"\n  //             className={classes.inputBox}\n  //             //   onChange={handleChange}\n  //             //   value={data.email}\n  //           />\n  //         </Grid>\n  //         <Grid item>\n  //           <TextField\n  //             id=\"skill\"\n  //             type=\"text\"\n  //             label=\"Skill\"\n  //             className={classes.inputBox}\n  //             //   onChange={handleChange}\n  //             //   value={data.password}\n  //           />\n  //         </Grid>\n  //         {/* <Grid item>\n  //           <TextField\n  //             id=\"jobTypes\"\n  //             type=\"text\"\n  //             label=\"Job Types\"\n  //             className={classes.inputBox}\n  //             onChange={inputHandler}\n  //             value={jobTypes.jobTypes}\n  //           />\n  //         </Grid> */}\n  //         <Grid item>\n  //           <FormControl fullWidth className={classes.inputBox}>\n  //             <InputLabel>Job Type</InputLabel>\n  //             <Select id=\"jobtype\" onChange={inputHandler} value={selected}>\n  //               <MenuItem value={'fulltime'}>Full Time</MenuItem>\n  //               <MenuItem value={'parttime'}>Part Timne</MenuItem>\n  //             </Select>\n  //           </FormControl>\n  //         </Grid>\n  //         <Grid item>\n  //           <TextField\n  //             id=\"salary\"\n  //             type=\"text\"\n  //             label=\"Salary\"\n  //             className={classes.inputBox}\n  //             //   onChange={handleChange}\n  //             //   value={data.password}\n  //           />\n  //         </Grid>\n  //         <Grid item>\n  //           <TextField\n  //             id=\"position\"\n  //             type=\"position\"\n  //             label=\"Position\"\n  //             className={classes.inputBox}\n  //             //   onChange={handleChange}\n  //             //   value={data.password}\n  //           />\n  //         </Grid>\n  //         <Grid item>\n  //           <Button\n  //             id=\"btnSubmit\"\n  //             variant=\"contained\"\n  //             type=\"submit\"\n  //             className={classes.submitButton}\n  //           >\n  //             Submit\n  //           </Button>\n  //         </Grid>\n  //         {/* <select onChange={inputHandler} value={selected} name=\"jobtype\">\n  //           <option value=\"Bangalore\">Bangalore</option>\n  //           <option value=\"Delhi\">Delhi</option>\n  //           <option value=\"Mumbai\">Mumbai</option>\n  //         </select> */}\n  //       </Grid>\n  //     </Paper>\n  //   </form>\n  // );\n\n  const setPopup = useContext(SetPopupContext);\n  const [jobDetails, setJobDetails] = useState({\n    title: '',\n    maxApplicants: 100,\n    maxPositions: 30,\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000).toISOString().substr(0, 16),\n    skillsets: [],\n    jobType: 'Full Time',\n    duration: 0,\n    salary: 0\n  });\n\n  const handleInput = (key, value) => {\n    setJobDetails({ ...jobDetails,\n      [key]: value\n    });\n  };\n\n  const handleUpdate = () => {\n    console.log(jobDetails);\n    axios.post(apiList.jobs, jobDetails, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setPopup({\n        open: true,\n        severity: 'success',\n        message: response.data.message\n      });\n      setJobDetails({\n        title: '',\n        maxApplicants: 100,\n        maxPositions: 30,\n        deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000).toISOString().substr(0, 16),\n        skillsets: [],\n        jobType: 'Full Time',\n        duration: 0,\n        salary: 0\n      });\n    }).catch(err => {\n      setPopup({\n        open: true,\n        severity: 'error',\n        message: err.response.data.message\n      });\n      console.log(err.response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      style: {\n        padding: '30px',\n        minHeight: '93vh',\n        width: ''\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: \"Add Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: true,\n        direction: \"column\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              padding: '20px',\n              outline: 'none',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              alignItems: \"stretch\",\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Title\",\n                  value: jobDetails.title,\n                  onChange: event => handleInput('title', event.target.value),\n                  variant: \"outlined\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(ChipInput, {\n                  className: classes.inputBox,\n                  label: \"Skills\",\n                  variant: \"outlined\",\n                  helperText: \"Press enter to add skills\",\n                  value: jobDetails.skillsets,\n                  onAdd: chip => setJobDetails({ ...jobDetails,\n                    skillsets: [...jobDetails.skillsets, chip]\n                  }),\n                  onDelete: (chip, index) => {\n                    let skillsets = jobDetails.skillsets;\n                    skillsets.splice(index, 1);\n                    setJobDetails({ ...jobDetails,\n                      skillsets: skillsets\n                    });\n                  },\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  label: \"Job Type\",\n                  variant: \"outlined\",\n                  value: jobDetails.jobType,\n                  onChange: event => {\n                    handleInput('jobType', event.target.value);\n                  },\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Full Time\",\n                    children: \"Full Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Part Time\",\n                    children: \"Part Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Work From Home\",\n                    children: \"Work From Home\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  label: \"Duration\",\n                  variant: \"outlined\",\n                  value: jobDetails.duration,\n                  onChange: event => {\n                    handleInput('duration', event.target.value);\n                  },\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 0,\n                    children: \"Flexible\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 1,\n                    children: \"1 Month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 2,\n                    children: \"2 Months\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 3,\n                    children: \"3 Months\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 4,\n                    children: \"4 Months\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 5,\n                    children: \"5 Months\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 6,\n                    children: \"6 Months\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Salary\",\n                  type: \"number\",\n                  variant: \"outlined\",\n                  value: jobDetails.salary,\n                  onChange: event => {\n                    handleInput('salary', event.target.value);\n                  },\n                  InputProps: {\n                    inputProps: {\n                      min: 0\n                    }\n                  },\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Application Deadline\",\n                  type: \"datetime-local\",\n                  value: jobDetails.deadline,\n                  onChange: event => {\n                    handleInput('deadline', event.target.value);\n                  },\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  variant: \"outlined\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Maximum Number Of Applicants\",\n                  type: \"number\",\n                  variant: \"outlined\",\n                  value: jobDetails.maxApplicants,\n                  onChange: event => {\n                    handleInput('maxApplicants', event.target.value);\n                  },\n                  InputProps: {\n                    inputProps: {\n                      min: 1\n                    }\n                  },\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Positions Available\",\n                  type: \"number\",\n                  variant: \"outlined\",\n                  value: jobDetails.maxPositions,\n                  onChange: event => {\n                    handleInput('maxPositions', event.target.value);\n                  },\n                  InputProps: {\n                    inputProps: {\n                      min: 1\n                    }\n                  },\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                padding: '10px 50px',\n                marginTop: '30px'\n              },\n              onClick: () => handleUpdate(),\n              children: \"Create Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddJob, \"ikX/kmRucUpsA/z02JCLWN/27as=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddJob;\nexport default AddJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["/home/cool/Desktop/Parthvi/References/try2/try2-navbar/FrontEnd/src/component/Recruiter/AddJob.js"],"names":["React","Grid","Paper","Typography","Button","TextField","makeStyles","FormControl","Select","MenuItem","InputLabel","useState","useEffect","Link","axios","Navbar","useStyles","body","padding","margin","inputBox","width","submitButton","backgroundColor","color","LinkColor","textDecoration","AddJob","classes","setPopup","useContext","SetPopupContext","jobDetails","setJobDetails","title","maxApplicants","maxPositions","deadline","Date","getTime","toISOString","substr","skillsets","jobType","duration","salary","handleInput","key","value","handleUpdate","console","log","post","apiList","jobs","headers","Authorization","localStorage","getItem","then","response","open","severity","message","data","catch","err","minHeight","outline","display","flexDirection","justifyContent","alignItems","event","target","chip","index","splice","inputProps","min","shrink","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n} from '@material-ui/core';\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Navbar from '../Navbar';\n\n// makeStyles use for CSS\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '0px 15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst AddJob = () => {\n  const classes = useStyles();\n\n  // const handleSubmit = (e) => {\n  //   // e.preventDefault();\n  //   // console.log(jobTypes);\n  //   // console.log(e.target.value);\n  //   // setJobType();\n  //   const url = 'http://localhost:5000/users/register';\n  //   axios\n  //     .post(url, {\n  //       jobType: jobTypes,\n  //       // types: user.types,\n  //     })\n  //     .then((res) => {\n  //       console.log(res.user);\n  //     });\n  // };\n\n  // const [selected, setSelected] = useState('');\n  // const inputHandler = (e) => {\n  //   e.preventDefault();\n  //   // const data = setSelected(e.target.selected);\n  //   // console.log(data);\n\n  //   const newdata = { ...selected };\n  //   console.log(newdata);\n  //   newdata[e.target.id] = e.target.value;\n  //   setSelected(newdata);\n  //   console.log(newdata);\n  // };\n\n  // return (\n  //   // Paper use as container , elevation - for shadow\n\n  //   <form>\n  //     <Paper elevation={3} className={classes.body}>\n  //       <Navbar />\n  //       <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n  //         <Grid item>\n  //           {/*  Typography use for size or different heading tag */}\n\n  //           <Typography variant=\"h4\" component=\"h2\">\n  //             Add Jobs\n  //           </Typography>\n  //         </Grid>\n  //         <Grid item>\n  //           <TextField\n  //             id=\"title\"\n  //             type=\"text\"\n  //             label=\"Title\"\n  //             className={classes.inputBox}\n  //             //   onChange={handleChange}\n  //             //   value={data.email}\n  //           />\n  //         </Grid>\n  //         <Grid item>\n  //           <TextField\n  //             id=\"skill\"\n  //             type=\"text\"\n  //             label=\"Skill\"\n  //             className={classes.inputBox}\n  //             //   onChange={handleChange}\n  //             //   value={data.password}\n  //           />\n  //         </Grid>\n  //         {/* <Grid item>\n  //           <TextField\n  //             id=\"jobTypes\"\n  //             type=\"text\"\n  //             label=\"Job Types\"\n  //             className={classes.inputBox}\n  //             onChange={inputHandler}\n  //             value={jobTypes.jobTypes}\n  //           />\n  //         </Grid> */}\n  //         <Grid item>\n  //           <FormControl fullWidth className={classes.inputBox}>\n  //             <InputLabel>Job Type</InputLabel>\n  //             <Select id=\"jobtype\" onChange={inputHandler} value={selected}>\n  //               <MenuItem value={'fulltime'}>Full Time</MenuItem>\n  //               <MenuItem value={'parttime'}>Part Timne</MenuItem>\n  //             </Select>\n  //           </FormControl>\n  //         </Grid>\n  //         <Grid item>\n  //           <TextField\n  //             id=\"salary\"\n  //             type=\"text\"\n  //             label=\"Salary\"\n  //             className={classes.inputBox}\n  //             //   onChange={handleChange}\n  //             //   value={data.password}\n  //           />\n  //         </Grid>\n  //         <Grid item>\n  //           <TextField\n  //             id=\"position\"\n  //             type=\"position\"\n  //             label=\"Position\"\n  //             className={classes.inputBox}\n  //             //   onChange={handleChange}\n  //             //   value={data.password}\n  //           />\n  //         </Grid>\n  //         <Grid item>\n  //           <Button\n  //             id=\"btnSubmit\"\n  //             variant=\"contained\"\n  //             type=\"submit\"\n  //             className={classes.submitButton}\n  //           >\n  //             Submit\n  //           </Button>\n  //         </Grid>\n  //         {/* <select onChange={inputHandler} value={selected} name=\"jobtype\">\n  //           <option value=\"Bangalore\">Bangalore</option>\n  //           <option value=\"Delhi\">Delhi</option>\n  //           <option value=\"Mumbai\">Mumbai</option>\n  //         </select> */}\n  //       </Grid>\n  //     </Paper>\n  //   </form>\n  // );\n\n  const setPopup = useContext(SetPopupContext);\n\n  const [jobDetails, setJobDetails] = useState({\n    title: '',\n    maxApplicants: 100,\n    maxPositions: 30,\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n      .toISOString()\n      .substr(0, 16),\n    skillsets: [],\n    jobType: 'Full Time',\n    duration: 0,\n    salary: 0,\n  });\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleUpdate = () => {\n    console.log(jobDetails);\n    axios\n      .post(apiList.jobs, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: 'success',\n          message: response.data.message,\n        });\n        setJobDetails({\n          title: '',\n          maxApplicants: 100,\n          maxPositions: 30,\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .substr(0, 16),\n          skillsets: [],\n          jobType: 'Full Time',\n          duration: 0,\n          salary: 0,\n        });\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: 'error',\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: '30px', minHeight: '93vh', width: '' }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Add Job</Typography>\n        </Grid>\n        <Grid item container xs direction=\"column\" justify=\"center\">\n          <Grid item>\n            <Paper\n              style={{\n                padding: '20px',\n                outline: 'none',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                alignItems=\"stretch\"\n                spacing={3}\n              >\n                <Grid item>\n                  <TextField\n                    label=\"Title\"\n                    value={jobDetails.title}\n                    onChange={(event) =>\n                      handleInput('title', event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <ChipInput\n                    className={classes.inputBox}\n                    label=\"Skills\"\n                    variant=\"outlined\"\n                    helperText=\"Press enter to add skills\"\n                    value={jobDetails.skillsets}\n                    onAdd={(chip) =>\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: [...jobDetails.skillsets, chip],\n                      })\n                    }\n                    onDelete={(chip, index) => {\n                      let skillsets = jobDetails.skillsets;\n                      skillsets.splice(index, 1);\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: skillsets,\n                      });\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Job Type\"\n                    variant=\"outlined\"\n                    value={jobDetails.jobType}\n                    onChange={(event) => {\n                      handleInput('jobType', event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Duration\"\n                    variant=\"outlined\"\n                    value={jobDetails.duration}\n                    onChange={(event) => {\n                      handleInput('duration', event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value={0}>Flexible</MenuItem>\n                    <MenuItem value={1}>1 Month</MenuItem>\n                    <MenuItem value={2}>2 Months</MenuItem>\n                    <MenuItem value={3}>3 Months</MenuItem>\n                    <MenuItem value={4}>4 Months</MenuItem>\n                    <MenuItem value={5}>5 Months</MenuItem>\n                    <MenuItem value={6}>6 Months</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Salary\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.salary}\n                    onChange={(event) => {\n                      handleInput('salary', event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 0 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Application Deadline\"\n                    type=\"datetime-local\"\n                    value={jobDetails.deadline}\n                    onChange={(event) => {\n                      handleInput('deadline', event.target.value);\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Maximum Number Of Applicants\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.maxApplicants}\n                    onChange={(event) => {\n                      handleInput('maxApplicants', event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Positions Available\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.maxPositions}\n                    onChange={(event) => {\n                      handleInput('maxPositions', event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: '10px 50px', marginTop: '30px' }}\n                onClick={() => handleUpdate()}\n              >\n                Create Job\n              </Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AddJob;\n"]},"metadata":{},"sourceType":"module"}