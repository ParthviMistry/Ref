{"ast":null,"code":"var _jsxFileName = \"/home/cool/Desktop/Parthvi/References/try2/try2-navbar/src/component/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Button, TextField, makeStyles, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px'\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px'\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white'\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black'\n  }\n}));\n\nconst Signup = props => {\n  _s();\n\n  const classes = useStyles();\n  const url = 'http://localhost:5000/users/register';\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    cpassword: '',\n    type: ''\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    axios.post(url, {\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      cpassword: user.cpassword,\n      type: user.type\n    }).then(res => {\n      console.log(res.user);\n    }).catch(e => {\n      console.log('Error' + e);\n    });\n  };\n\n  const inputHandler = e => {\n    e.preventDefault();\n    const newdata = { ...user\n    };\n    console.log(newdata);\n    newdata[e.target.id] = e.target.value;\n    setUser(newdata);\n    console.log(newdata);\n  }; // const [username, setusername] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [type, setType] = useState('');\n  // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n  // const submitHandler = async (e) => {\n  //   e.preventDefault();\n  //   console.log(username, email, password, type);\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-type': 'application/json',\n  //         'Access-Control-Allow-Origin': '*',\n  //       },\n  //     };\n  //     setLoading(true);\n  //     const { data } = await axios.post(\n  //       'http://localhost:3000/users/register',\n  //       {\n  //         username,\n  //         email,\n  //         password,\n  //         type,\n  //       },\n  //       config\n  //     );\n  //     console.log(data);\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     setLoading(false);\n  //   } catch (e) {\n  //     console.log('Error' + e);\n  //     // setError(e.response.data.message);\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => submitHandler(e),\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.body,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 4,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h2\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"username\",\n            type: \"text\",\n            label: \"Username\",\n            className: classes.inputBox,\n            onChange: e => inputHandler(e),\n            value: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            className: classes.inputBox,\n            onChange: e => inputHandler(e),\n            value: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            className: classes.inputBox,\n            onChange: e => inputHandler(e),\n            value: user.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"cpassword\",\n            type: \"password\",\n            label: \"Confirm Password\",\n            className: classes.inputBox,\n            onChange: e => inputHandler(e),\n            value: user.cpassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            className: classes.inputBox,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => inputHandler(e),\n              value: user.type,\n              id: \"type\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Applicant\",\n                children: \"Applicant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Recruitmend\",\n                children: \"Recruitmend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnSignup\",\n            variant: \"contained\",\n            className: classes.submitButton,\n            type: \"submit\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Login\",\n              className: classes.LinkColor,\n              children: \"Already have an Account?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"6cNlMlH+5KFtYq51YYxHBVN1vYk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/cool/Desktop/Parthvi/References/try2/try2-navbar/src/component/Signup.js"],"names":["Grid","Paper","Typography","Button","TextField","makeStyles","Select","MenuItem","FormControl","InputLabel","Link","axios","useState","useEffect","Navbar","useStyles","body","padding","margin","inputBox","width","submitButton","backgroundColor","color","LinkColor","textDecoration","Signup","props","classes","url","user","setUser","name","email","password","cpassword","type","submitHandler","e","preventDefault","post","username","then","res","console","log","catch","inputHandler","newdata","target","id","value"],"mappings":";;;AAAA,SACEA,IADF,EAEEC,KAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,QARF,EASEC,WATF,EAUEC,UAVF,QAWO,mBAXP;AAaA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAC,OAAO;AAClCW,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,WADL;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GAD4B;AAKlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,OADC;AAERF,IAAAA,MAAM,EAAE;AAFA,GALwB;AASlCG,EAAAA,YAAY,EAAE;AACZD,IAAAA,KAAK,EAAE,OADK;AAEZF,IAAAA,MAAM,EAAE,MAFI;AAGZI,IAAAA,eAAe,EAAE,SAHL;AAIZC,IAAAA,KAAK,EAAE;AAJK,GAToB;AAelCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,MADP;AAETF,IAAAA,KAAK,EAAE;AAFE;AAfuB,CAAP,CAAD,CAA5B;;AAqBA,MAAMG,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,QAAMc,GAAG,GAAG,sCAAZ;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC;AAC/BoB,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,SAAS,EAAE,EAJoB;AAK/BC,IAAAA,IAAI,EAAE;AALyB,GAAD,CAAhC;;AAQA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA5B,IAAAA,KAAK,CACF6B,IADH,CACQX,GADR,EACa;AACTY,MAAAA,QAAQ,EAAEX,IAAI,CAACW,QADN;AAETR,MAAAA,KAAK,EAAEH,IAAI,CAACG,KAFH;AAGTC,MAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHN;AAITC,MAAAA,SAAS,EAAEL,IAAI,CAACK,SAJP;AAKTC,MAAAA,IAAI,EAAEN,IAAI,CAACM;AALF,KADb,EAQGM,IARH,CAQSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACb,IAAhB;AACD,KAVH,EAWGgB,KAXH,CAWUR,CAAD,IAAO;AACZM,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUP,CAAtB;AACD,KAbH;AAcD,GAhBD;;AAkBA,QAAMS,YAAY,GAAIT,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMS,OAAO,GAAG,EAAE,GAAGlB;AAAL,KAAhB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACAA,IAAAA,OAAO,CAACV,CAAC,CAACW,MAAF,CAASC,EAAV,CAAP,GAAuBZ,CAAC,CAACW,MAAF,CAASE,KAAhC;AACApB,IAAAA,OAAO,CAACiB,OAAD,CAAP;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACD,GAPD,CA/BwB,CAwCxB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAGV,CAAD,IAAOD,aAAa,CAACC,CAAD,CAApC;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAqB,MAAA,SAAS,EAAEV,OAAO,CAACZ,IAAxC;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAE,CAA5C;AAA+C,QAAA,UAAU,EAAC,QAA1D;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,EAAE,EAAC,UADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAC,UAHR;AAIE,YAAA,SAAS,EAAEY,OAAO,CAACT,QAJrB;AAKE,YAAA,QAAQ,EAAGmB,CAAD,IAAOS,YAAY,CAACT,CAAD,CAL/B;AAME,YAAA,KAAK,EAAER,IAAI,CAACW;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAgBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,SAAS,EAAEb,OAAO,CAACT,QAJrB;AAKE,YAAA,QAAQ,EAAGmB,CAAD,IAAOS,YAAY,CAACT,CAAD,CAL/B;AAME,YAAA,KAAK,EAAER,IAAI,CAACG;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF,eA0BE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,EAAE,EAAC,UADL;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAC,UAHR;AAIE,YAAA,SAAS,EAAEL,OAAO,CAACT,QAJrB;AAKE,YAAA,QAAQ,EAAGmB,CAAD,IAAOS,YAAY,CAACT,CAAD,CAL/B;AAME,YAAA,KAAK,EAAER,IAAI,CAACI;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA1BF,eAoCE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,EAAE,EAAC,WADL;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAC,kBAHR;AAIE,YAAA,SAAS,EAAEN,OAAO,CAACT,QAJrB;AAKE,YAAA,QAAQ,EAAGmB,CAAD,IAAOS,YAAY,CAACT,CAAD,CAL/B;AAME,YAAA,KAAK,EAAER,IAAI,CAACK;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApCF,eA8CE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,SAAS,MAAtB;AAAuB,YAAA,SAAS,EAAEP,OAAO,CAACT,QAA1C;AAAA,oCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AACE,cAAA,QAAQ,EAAGmB,CAAD,IAAOS,YAAY,CAACT,CAAD,CAD/B;AAEE,cAAA,KAAK,EAAER,IAAI,CAACM,IAFd;AAGE,cAAA,EAAE,EAAC,MAHL;AAAA,sCAKE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA9CF,eA2DE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,EAAE,EAAC,WADL;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,SAAS,EAAER,OAAO,CAACP,YAHrB;AAIE,YAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA3DF,eAqEE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,WAApB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,QAAT;AAAkB,cAAA,SAAS,EAAEO,OAAO,CAACJ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArEF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoFD,CArKD;;GAAME,M;UACYX,S;;;KADZW,M;AAuKN,eAAeA,MAAf","sourcesContent":["import {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\n\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nimport Navbar from './Navbar';\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst Signup = (props) => {\n  const classes = useStyles();\n\n  const url = 'http://localhost:5000/users/register';\n\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    cpassword: '',\n    type: '',\n  });\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    axios\n      .post(url, {\n        username: user.username,\n        email: user.email,\n        password: user.password,\n        cpassword: user.cpassword,\n        type: user.type,\n      })\n      .then((res) => {\n        console.log(res.user);\n      })\n      .catch((e) => {\n        console.log('Error' + e);\n      });\n  };\n\n  const inputHandler = (e) => {\n    e.preventDefault();\n    const newdata = { ...user };\n    console.log(newdata);\n    newdata[e.target.id] = e.target.value;\n    setUser(newdata);\n    console.log(newdata);\n  };\n\n  // const [username, setusername] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [type, setType] = useState('');\n  // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n\n  // const submitHandler = async (e) => {\n  //   e.preventDefault();\n  //   console.log(username, email, password, type);\n\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-type': 'application/json',\n  //         'Access-Control-Allow-Origin': '*',\n  //       },\n  //     };\n\n  //     setLoading(true);\n  //     const { data } = await axios.post(\n  //       'http://localhost:3000/users/register',\n  //       {\n  //         username,\n  //         email,\n  //         password,\n  //         type,\n  //       },\n  //       config\n  //     );\n\n  //     console.log(data);\n\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     setLoading(false);\n  //   } catch (e) {\n  //     console.log('Error' + e);\n  //     // setError(e.response.data.message);\n  //   }\n  // };\n\n  return (\n    <form onSubmit={(e) => submitHandler(e)}>\n      <Paper elevation={3} className={classes.body}>\n        <Navbar />\n        <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h2\">\n              Signup\n            </Typography>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"username\"\n              type=\"text\"\n              label=\"Username\"\n              className={classes.inputBox}\n              onChange={(e) => inputHandler(e)}\n              value={user.username}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              className={classes.inputBox}\n              onChange={(e) => inputHandler(e)}\n              value={user.email}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              className={classes.inputBox}\n              onChange={(e) => inputHandler(e)}\n              value={user.password}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"cpassword\"\n              type=\"password\"\n              label=\"Confirm Password\"\n              className={classes.inputBox}\n              onChange={(e) => inputHandler(e)}\n              value={user.cpassword}\n            />\n          </Grid>\n          <Grid item>\n            <FormControl fullWidth className={classes.inputBox}>\n              <InputLabel>Type</InputLabel>\n              <Select\n                onChange={(e) => inputHandler(e)}\n                value={user.type}\n                id=\"type\"\n              >\n                <MenuItem value=\"Applicant\">Applicant</MenuItem>\n                <MenuItem value=\"Recruitmend\">Recruitmend</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <Button\n              id=\"btnSignup\"\n              variant=\"contained\"\n              className={classes.submitButton}\n              type=\"submit\"\n            >\n              Signup\n            </Button>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle2\">\n              <Link to=\"/Login\" className={classes.LinkColor}>\n                Already have an Account?\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </form>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}