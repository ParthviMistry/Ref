{"ast":null,"code":"var _jsxFileName = \"/home/cool/Desktop/Parthvi/References/try2/try2-navbar/FrontEnd/src/component/Recruiter/AddJob.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Paper, Typography, Button, TextField, makeStyles, FormControl, Select, MenuItem, InputLabel } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from '../Navbar'; // makeStyles use for CSS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px'\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px'\n  },\n  submitButton: {\n    width: '300px',\n    margin: '0px 15px',\n    backgroundColor: '#034f84',\n    color: 'white'\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black'\n  }\n}));\n\nconst AddJob = () => {\n  _s();\n\n  const classes = useStyles();\n  const [jobTypes, setJobType] = useState({\n    jobTypes: ''\n  });\n\n  const handleSubmit = e => {\n    // e.preventDefault();\n    // console.log(jobTypes);\n    // console.log(e.target.value);\n    // setJobType();\n    const url = 'http://localhost:5000/users/register';\n    axios.post(url, {\n      jobTypes: jobTypes // types: user.types,\n\n    }).then(res => {\n      console.log(res.user);\n    });\n  };\n\n  const inputHandler = e => {\n    e.preventDefault(); // console.log(user.types);\n\n    const newdata = { ...jobTypes\n    };\n    console.log(newdata);\n    newdata[e.target.id] = e.target.value;\n    setJobType(newdata);\n    console.log(newdata);\n  };\n\n  return (\n    /*#__PURE__*/\n    // Paper use as container , elevation - for shadow\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.body,\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          spacing: 4,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h2\",\n              children: \"Add Jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"title\",\n              type: \"text\",\n              label: \"Title\",\n              className: classes.inputBox //   onChange={handleChange}\n              //   value={data.email}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"skill\",\n              type: \"text\",\n              label: \"Skill\",\n              className: classes.inputBox //   onChange={handleChange}\n              //   value={data.password}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              className: classes.inputBox,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Job Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                id: \"jobTypes\",\n                onChange: inputHandler,\n                value: jobTypes,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"fulltime\",\n                  children: \"Full Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"parttime\",\n                  children: \"Part Timne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"salary\",\n              type: \"text\",\n              label: \"Salary\",\n              className: classes.inputBox //   onChange={handleChange}\n              //   value={data.password}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"position\",\n              type: \"position\",\n              label: \"Position\",\n              className: classes.inputBox //   onChange={handleChange}\n              //   value={data.password}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"btnSubmit\",\n              variant: \"contained\",\n              type: \"submit\",\n              className: classes.submitButton,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(AddJob, \"8a4kiPjs4nDxCjIWD2pb1WK5uMs=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddJob;\nexport default AddJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["/home/cool/Desktop/Parthvi/References/try2/try2-navbar/FrontEnd/src/component/Recruiter/AddJob.js"],"names":["React","Grid","Paper","Typography","Button","TextField","makeStyles","FormControl","Select","MenuItem","InputLabel","useState","useEffect","Link","axios","Navbar","useStyles","body","padding","margin","inputBox","width","submitButton","backgroundColor","color","LinkColor","textDecoration","AddJob","classes","jobTypes","setJobType","handleSubmit","e","url","post","then","res","console","log","user","inputHandler","preventDefault","newdata","target","id","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,IADF,EAEEC,KAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,MARF,EASEC,QATF,EAUEC,UAVF,QAWO,mBAXP;AAaA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAC,OAAO;AAClCW,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,WADL;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GAD4B;AAKlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,OADC;AAERF,IAAAA,MAAM,EAAE;AAFA,GALwB;AASlCG,EAAAA,YAAY,EAAE;AACZD,IAAAA,KAAK,EAAE,OADK;AAEZF,IAAAA,MAAM,EAAE,UAFI;AAGZI,IAAAA,eAAe,EAAE,SAHL;AAIZC,IAAAA,KAAK,EAAE;AAJK,GAToB;AAelCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,MADP;AAETF,IAAAA,KAAK,EAAE;AAFE;AAfuB,CAAP,CAAD,CAA5B;;AAqBA,MAAMG,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAEA,QAAM,CAACa,QAAD,EAAWC,UAAX,IAAyBnB,QAAQ,CAAC;AAAEkB,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAvC;;AAEA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACA;AACA;AACA;AACA,UAAMC,GAAG,GAAG,sCAAZ;AACAnB,IAAAA,KAAK,CACFoB,IADH,CACQD,GADR,EACa;AACTJ,MAAAA,QAAQ,EAAEA,QADD,CAET;;AAFS,KADb,EAKGM,IALH,CAKSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACD,KAPH;AAQD,GAdD;;AAgBA,QAAMC,YAAY,GAAIR,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACS,cAAF,GAD0B,CAE1B;;AACA,UAAMC,OAAO,GAAG,EAAE,GAAGb;AAAL,KAAhB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACAA,IAAAA,OAAO,CAACV,CAAC,CAACW,MAAF,CAASC,EAAV,CAAP,GAAuBZ,CAAC,CAACW,MAAF,CAASE,KAAhC;AACAf,IAAAA,UAAU,CAACY,OAAD,CAAV;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACD,GARD;;AAUA;AAAA;AACE;AAEA;AAAM,MAAA,QAAQ,EAAEX,YAAhB;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,CAAlB;AAAqB,QAAA,SAAS,EAAEH,OAAO,CAACX,IAAxC;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAC,QAA1B;AAAmC,UAAA,OAAO,EAAE,CAA5C;AAA+C,UAAA,UAAU,EAAC,QAA1D;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCAGE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,OADL;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,KAAK,EAAC,OAHR;AAIE,cAAA,SAAS,EAAEW,OAAO,CAACR,QAJrB,CAKE;AACA;;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF,eAkBE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,OADL;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,KAAK,EAAC,OAHR;AAIE,cAAA,SAAS,EAAEQ,OAAO,CAACR,QAJrB,CAKE;AACA;;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAsCE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,WAAD;AAAa,cAAA,SAAS,MAAtB;AAAuB,cAAA,SAAS,EAAEQ,OAAO,CAACR,QAA1C;AAAA,sCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,MAAD;AAAQ,gBAAA,EAAE,EAAC,UAAX;AAAsB,gBAAA,QAAQ,EAAEoB,YAAhC;AAA8C,gBAAA,KAAK,EAAEX,QAArD;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtCF,eA+CE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,QADL;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,KAAK,EAAC,QAHR;AAIE,cAAA,SAAS,EAAED,OAAO,CAACR,QAJrB,CAKE;AACA;;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA/CF,eAyDE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,UADL;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,KAAK,EAAC,UAHR;AAIE,cAAA,SAAS,EAAEQ,OAAO,CAACR,QAJrB,CAKE;AACA;;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzDF,eAoEE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,EAAE,EAAC,WADL;AAEE,cAAA,OAAO,EAAC,WAFV;AAGE,cAAA,IAAI,EAAC,QAHP;AAIE,cAAA,SAAS,EAAEQ,OAAO,CAACN,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBApEF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAwFD,CAvHD;;GAAMK,M;UACYX,S;;;KADZW,M;AAyHN,eAAeA,MAAf","sourcesContent":["import React from 'react';\n\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n} from '@material-ui/core';\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Navbar from '../Navbar';\n\n// makeStyles use for CSS\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '0px 15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst AddJob = () => {\n  const classes = useStyles();\n\n  const [jobTypes, setJobType] = useState({ jobTypes: '' });\n\n  const handleSubmit = (e) => {\n    // e.preventDefault();\n    // console.log(jobTypes);\n    // console.log(e.target.value);\n    // setJobType();\n    const url = 'http://localhost:5000/users/register';\n    axios\n      .post(url, {\n        jobTypes: jobTypes,\n        // types: user.types,\n      })\n      .then((res) => {\n        console.log(res.user);\n      });\n  };\n\n  const inputHandler = (e) => {\n    e.preventDefault();\n    // console.log(user.types);\n    const newdata = { ...jobTypes };\n    console.log(newdata);\n    newdata[e.target.id] = e.target.value;\n    setJobType(newdata);\n    console.log(newdata);\n  };\n\n  return (\n    // Paper use as container , elevation - for shadow\n\n    <form onSubmit={handleSubmit}>\n      <Paper elevation={3} className={classes.body}>\n        <Navbar />\n        <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n          <Grid item>\n            {/*  Typography use for size or different heading tag */}\n\n            <Typography variant=\"h4\" component=\"h2\">\n              Add Jobs\n            </Typography>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"title\"\n              type=\"text\"\n              label=\"Title\"\n              className={classes.inputBox}\n              //   onChange={handleChange}\n              //   value={data.email}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"skill\"\n              type=\"text\"\n              label=\"Skill\"\n              className={classes.inputBox}\n              //   onChange={handleChange}\n              //   value={data.password}\n            />\n          </Grid>\n          {/* <Grid item>\n            <TextField\n              id=\"jobTypes\"\n              type=\"text\"\n              label=\"Job Types\"\n              className={classes.inputBox}\n              onChange={inputHandler}\n              value={jobTypes.jobTypes}\n            />\n          </Grid> */}\n          <Grid item>\n            <FormControl fullWidth className={classes.inputBox}>\n              <InputLabel>Job Type</InputLabel>\n              <Select id=\"jobTypes\" onChange={inputHandler} value={jobTypes}>\n                <MenuItem value=\"fulltime\">Full Time</MenuItem>\n                <MenuItem value=\"parttime\">Part Timne</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"salary\"\n              type=\"text\"\n              label=\"Salary\"\n              className={classes.inputBox}\n              //   onChange={handleChange}\n              //   value={data.password}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"position\"\n              type=\"position\"\n              label=\"Position\"\n              className={classes.inputBox}\n              //   onChange={handleChange}\n              //   value={data.password}\n            />\n          </Grid>\n\n          <Grid item>\n            <Button\n              id=\"btnSubmit\"\n              variant=\"contained\"\n              type=\"submit\"\n              className={classes.submitButton}\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </form>\n  );\n};\n\nexport default AddJob;\n"]},"metadata":{},"sourceType":"module"}