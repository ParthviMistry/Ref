{"ast":null,"code":"var _jsxFileName = \"/home/cool/Desktop/Parthvi/References/try2/try2-navbar/src/component/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Button, TextField, makeStyles } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'; // import cors from 'cors';\n\nimport Navbar from './Navbar'; // makeStyles use for CSS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px'\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px'\n  },\n  submitButton: {\n    width: '300px',\n    margin: '0px 15px',\n    backgroundColor: '#034f84',\n    color: 'white'\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black'\n  }\n}));\n\nconst Login = props => {\n  _s();\n\n  const classes = useStyles(); // let history = useHistory();\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n  // const submitHandler = async (e) => {\n  //   e.preventDefault();\n  //   console.log(email, password);\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-type': 'application/json',\n  //       },\n  //     };\n  //     setLoading(true);\n  //     const { data } = await axios.post('localhost:3000/users/login', {\n  //       email,\n  //       password,\n  //     });\n  //     console.log(data);\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     setLoading(false);\n  //   } catch (e) {\n  //     console.log('Erroe' + e);\n  //     // setError(e.response.data.message);\n  //   }\n  // };\n  // const url = 'http://localhost:5000/users/login';\n  // const [user, setUser] = useState({\n  //   email: '',\n  //   password: '',\n  // });\n  // const submitHandler = (e) => {\n  //   e.preventDefault();\n  //   axios\n  //     .post(url, {\n  //       email: user.email,\n  //       password: user.password,\n  //     })\n  //     .then((res) => {\n  //       console.log(res.user);\n  //     });\n  // };\n  // const inputHandler = (e) => {\n  //   e.preventDefault();\n  //   const newdata = { ...user };\n  //   console.log(newdata);\n  //   newdata[e.target.id] = e.target.value;\n  //   setUser(newdata);\n  //   console.log(newdata);\n  // };\n\n  const [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    e.preventDefault();\n    const newdata = { ...data\n    };\n    console.log(newdata);\n    newdata[e.target.id] = e.target.value;\n    setData(newdata);\n    console.log(newdata);\n  }; //setData({ ...data, [input.name]: input.value });\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // try {\n    // const url = 'http://localhost:5000/users/login';\n    //   const { data: res } = await axios.post(url, data);\n    //   localStorage.setItem('token', res.data.token);\n    //   window.location = '/home';\n    // } catch (error) {\n    //   console.log('Error' + error);\n    // }\n\n    const url = 'http://localhost:5000/users/login';\n  };\n\n  return (\n    /*#__PURE__*/\n    // Paper use as container , elevation - for shadow\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.body,\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          spacing: 4,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h2\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"email\",\n              type: \"text\",\n              label: \"Email\",\n              className: classes.inputBox,\n              onChange: handleChange,\n              value: data.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"password\",\n              type: \"password\",\n              label: \"Password\",\n              className: classes.inputBox,\n              onChange: handleChange,\n              value: data.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/resetpassword\",\n                className: classes.LinkColor,\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"btnLogin\",\n              variant: \"contained\",\n              type: \"submit\",\n              className: classes.submitButton,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Signup\",\n                className: classes.LinkColor,\n                children: \"Create an Account?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Login, \"NQvFXN5pEHDpU5pIFZi+xyscReE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/cool/Desktop/Parthvi/References/try2/try2-navbar/src/component/Login.js"],"names":["Grid","Paper","Typography","Button","TextField","makeStyles","useState","useEffect","Link","axios","Navbar","useStyles","body","padding","margin","inputBox","width","submitButton","backgroundColor","color","LinkColor","textDecoration","Login","props","classes","data","setData","email","password","handleChange","e","preventDefault","newdata","console","log","target","id","value","handleSubmit","url"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n} from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n// import cors from 'cors';\nimport Navbar from './Navbar';\n\n// makeStyles use for CSS\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '0px 15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  // let history = useHistory();\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n\n  // const submitHandler = async (e) => {\n  //   e.preventDefault();\n  //   console.log(email, password);\n\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-type': 'application/json',\n  //       },\n  //     };\n\n  //     setLoading(true);\n  //     const { data } = await axios.post('localhost:3000/users/login', {\n  //       email,\n  //       password,\n  //     });\n\n  //     console.log(data);\n\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     setLoading(false);\n  //   } catch (e) {\n  //     console.log('Erroe' + e);\n  //     // setError(e.response.data.message);\n  //   }\n  // };\n\n  // const url = 'http://localhost:5000/users/login';\n\n  // const [user, setUser] = useState({\n  //   email: '',\n  //   password: '',\n  // });\n\n  // const submitHandler = (e) => {\n  //   e.preventDefault();\n  //   axios\n  //     .post(url, {\n  //       email: user.email,\n  //       password: user.password,\n  //     })\n  //     .then((res) => {\n  //       console.log(res.user);\n  //     });\n  // };\n\n  // const inputHandler = (e) => {\n  //   e.preventDefault();\n  //   const newdata = { ...user };\n  //   console.log(newdata);\n  //   newdata[e.target.id] = e.target.value;\n  //   setUser(newdata);\n  //   console.log(newdata);\n  // };\n\n  const [data, setData] = useState({ email: '', password: '' });\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    const newdata = { ...data };\n    console.log(newdata);\n    newdata[e.target.id] = e.target.value;\n    setData(newdata);\n    console.log(newdata);\n  };\n  //setData({ ...data, [input.name]: input.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // try {\n    // const url = 'http://localhost:5000/users/login';\n    //   const { data: res } = await axios.post(url, data);\n\n    //   localStorage.setItem('token', res.data.token);\n\n    //   window.location = '/home';\n    // } catch (error) {\n    //   console.log('Error' + error);\n    // }\n\n    const url = 'http://localhost:5000/users/login';\n  };\n\n  return (\n    // Paper use as container , elevation - for shadow\n\n    <form onSubmit={handleSubmit}>\n      <Paper elevation={3} className={classes.body}>\n        <Navbar />\n        <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n          <Grid item>\n            {/*  Typography use for size or different heading tag */}\n\n            <Typography variant=\"h4\" component=\"h2\">\n              Login\n            </Typography>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"email\"\n              type=\"text\"\n              label=\"Email\"\n              className={classes.inputBox}\n              onChange={handleChange}\n              value={data.email}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              className={classes.inputBox}\n              onChange={handleChange}\n              value={data.password}\n            />\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle2\">\n              <Link to=\"/resetpassword\" className={classes.LinkColor}>\n                Forgot Password?\n              </Link>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              id=\"btnLogin\"\n              variant=\"contained\"\n              type=\"submit\"\n              className={classes.submitButton}\n            >\n              Login\n            </Button>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle2\">\n              <Link to=\"/Signup\" className={classes.LinkColor}>\n                Create an Account?\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </form>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}