{"ast":null,"code":"var _jsxFileName = \"/home/cool/Desktop/Parthvi/References/try2/try2-navbar/FrontEnd/src/component/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Button, TextField, makeStyles, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px'\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px'\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white'\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black'\n  }\n}));\n\nconst Signup = () => {\n  _s();\n\n  const classes = useStyles();\n  const url = 'http://localhost:5000/users/register';\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    password: '',\n    cpassword: '',\n    types: ''\n  });\n\n  const submitHandler = async e => {\n    // try {\n    //   let response = await axios.post(url, {\n    //     username: user.username,\n    //     email: user.email,\n    //     password: user.password,\n    //     cpassword: user.cpassword,\n    //     type: user.type,\n    //   });\n    //   if (response.status === 200) {\n    //     toast.success('Added');\n    //   }\n    // } catch (e) {\n    //   toast.error('Somthing went wrong');\n    // }\n    console.log(user);\n    axios.post(url, {\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      cpassword: user.cpassword,\n      types: user.types\n    }).then(res => {\n      console.log(res.user);\n    });\n  }; // const inputHandler = (e) => {\n  //   e.preventDefault();\n  //   // console.log(user.types);\n  //   const newdata = { ...user };\n  //   console.log(newdata);\n  //   newdata[e.target.id] = e.target.value;\n  //   setUser(newdata);\n  //   console.log(newdata);\n  // };\n\n\n  const inputHandler = (key, value) => {\n    // console.log(user);\n    setUser({ ...user,\n      [key]: value\n    });\n  }; // const [username, setusername] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [type, setType] = useState('');\n  // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n  // const submitHandler = async (e) => {\n  //   e.preventDefault();\n  //   console.log(username, email, password, type);\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-type': 'application/json',\n  //         'Access-Control-Allow-Origin': '*',\n  //       },\n  //     };\n  //     setLoading(true);\n  //     const { data } = await axios.post(\n  //       'http://localhost:3000/users/register',\n  //       {\n  //         username,\n  //         email,\n  //         password,\n  //         type,\n  //       },\n  //       config\n  //     );\n  //     console.log(data);\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     setLoading(false);\n  //   } catch (e) {\n  //     console.log('Error' + e);\n  //     // setError(e.response.data.message);\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: classes.body,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 4,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h2\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"username\",\n          type: \"text\",\n          label: \"Username\",\n          className: classes.inputBox,\n          onChange: event => {\n            inputHandler('username', event.target.value);\n          },\n          value: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"email\",\n          type: \"email\",\n          label: \"Email\",\n          className: classes.inputBox,\n          onChange: event => {\n            inputHandler('email', event.target.value);\n          },\n          value: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          className: classes.inputBox,\n          onChange: event => {\n            inputHandler('password', event.target.value);\n          },\n          value: user.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"cpassword\",\n          type: \"password\",\n          label: \"Confirm Password\",\n          className: classes.inputBox,\n          onChange: event => {\n            inputHandler('cpassword', event.target.value);\n          },\n          value: user.cpassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          className: classes.inputBox,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"types\",\n            onChange: event => {\n              inputHandler('types', event.target.value);\n            },\n            value: user.types,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"applicant\",\n              children: \"Applicant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"recruiter\",\n              children: \"Recruiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"btnSignup\",\n          variant: \"contained\",\n          className: classes.submitButton,\n          type: \"submit\",\n          onClick: submitHandler,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Login\",\n            className: classes.LinkColor,\n            children: \"Already have an Account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"oqnjrqLjHUmo87Eob7iiz2d3ajE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/cool/Desktop/Parthvi/References/try2/try2-navbar/FrontEnd/src/component/Signup.js"],"names":["Grid","Paper","Typography","Button","TextField","makeStyles","Select","MenuItem","FormControl","InputLabel","Link","axios","useState","useEffect","toast","ToastContainer","Navbar","useStyles","body","padding","margin","inputBox","width","submitButton","backgroundColor","color","LinkColor","textDecoration","Signup","classes","url","user","setUser","username","email","password","cpassword","types","submitHandler","e","console","log","post","then","res","inputHandler","key","value","event","target"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\n\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Navbar from './Navbar';\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst Signup = () => {\n  const classes = useStyles();\n\n  const url = 'http://localhost:5000/users/register';\n\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    password: '',\n    cpassword: '',\n    types: '',\n  });\n\n  const submitHandler = async (e) => {\n    // try {\n    //   let response = await axios.post(url, {\n    //     username: user.username,\n    //     email: user.email,\n    //     password: user.password,\n    //     cpassword: user.cpassword,\n    //     type: user.type,\n    //   });\n\n    //   if (response.status === 200) {\n    //     toast.success('Added');\n    //   }\n    // } catch (e) {\n    //   toast.error('Somthing went wrong');\n    // }\n    console.log(user);\n    axios\n      .post(url, {\n        username: user.username,\n        email: user.email,\n        password: user.password,\n        cpassword: user.cpassword,\n        types: user.types,\n      })\n      .then((res) => {\n        console.log(res.user);\n      });\n  };\n\n  // const inputHandler = (e) => {\n  //   e.preventDefault();\n  //   // console.log(user.types);\n  //   const newdata = { ...user };\n  //   console.log(newdata);\n  //   newdata[e.target.id] = e.target.value;\n  //   setUser(newdata);\n  //   console.log(newdata);\n  // };\n\n  const inputHandler = (key, value) => {\n    // console.log(user);\n    setUser({\n      ...user,\n      [key]: value,\n    });\n  };\n\n  // const [username, setusername] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [type, setType] = useState('');\n  // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n\n  // const submitHandler = async (e) => {\n  //   e.preventDefault();\n  //   console.log(username, email, password, type);\n\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-type': 'application/json',\n  //         'Access-Control-Allow-Origin': '*',\n  //       },\n  //     };\n\n  //     setLoading(true);\n  //     const { data } = await axios.post(\n  //       'http://localhost:3000/users/register',\n  //       {\n  //         username,\n  //         email,\n  //         password,\n  //         type,\n  //       },\n  //       config\n  //     );\n\n  //     console.log(data);\n\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     setLoading(false);\n  //   } catch (e) {\n  //     console.log('Error' + e);\n  //     // setError(e.response.data.message);\n  //   }\n  // };\n\n  return (\n    <Paper elevation={3} className={classes.body}>\n      <Navbar />\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\" component=\"h2\">\n            Signup\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"username\"\n            type=\"text\"\n            label=\"Username\"\n            className={classes.inputBox}\n            onChange={(event) => {\n              inputHandler('username', event.target.value);\n            }}\n            value={user.username}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"email\"\n            type=\"email\"\n            label=\"Email\"\n            className={classes.inputBox}\n            onChange={(event) => {\n              inputHandler('email', event.target.value);\n            }}\n            value={user.email}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            className={classes.inputBox}\n            onChange={(event) => {\n              inputHandler('password', event.target.value);\n            }}\n            value={user.password}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"cpassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            className={classes.inputBox}\n            onChange={(event) => {\n              inputHandler('cpassword', event.target.value);\n            }}\n            value={user.cpassword}\n          />\n        </Grid>\n        <Grid item>\n          <FormControl fullWidth className={classes.inputBox}>\n            <InputLabel>Type</InputLabel>\n            <Select\n              id=\"types\"\n              onChange={(event) => {\n                inputHandler('types', event.target.value);\n              }}\n              value={user.types}\n            >\n              <MenuItem value=\"applicant\">Applicant</MenuItem>\n              <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Button\n            id=\"btnSignup\"\n            variant=\"contained\"\n            className={classes.submitButton}\n            type=\"submit\"\n            onClick={submitHandler}\n          >\n            Signup\n          </Button>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle2\">\n            <Link to=\"/Login\" className={classes.LinkColor}>\n              Already have an Account?\n            </Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}