{"ast":null,"code":"var _jsxFileName = \"/home/cool/Desktop/Parthvi/References/try2/try2-navbar/src/component/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Button, TextField, makeStyles, form } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from './Navbar'; // makeStyles use for CSS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px'\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px'\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white'\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black'\n  }\n}));\n\nconst Login = props => {\n  _s();\n\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const submitHandler = async e => {\n    e.preventDefault(); // console.log(email, password);\n\n    try {\n      const config = {\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      setLoading(true);\n      const {\n        data\n      } = await axios.post('api/users/login', {\n        email,\n        password\n      }, config);\n      localStorage;\n      setLoading(false);\n    } catch (e) {\n      setError(e.response.data.message);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // Paper use as container , elevation - for shadow\n    _jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.body,\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          spacing: 4,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h2\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"txtEmailId\",\n              type: \"text\",\n              label: \"Email\",\n              className: classes.inputBox,\n              onChange: e => setEmail(e.target.value),\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"txtPassword\",\n              type: \"password\",\n              label: \"Password\",\n              className: classes.inputBox,\n              onChange: e => setPassword(e.target.value),\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"btnLogin\",\n              variant: \"contained\",\n              type: \"submit\",\n              className: classes.submitButton,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Signup\",\n                className: classes.LinkColor,\n                children: \"Create an Account?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), \"//\", ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Login, \"SlK6QkLNgTL8wihdkS84Sv3FrtQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/cool/Desktop/Parthvi/References/try2/try2-navbar/src/component/Login.js"],"names":["Grid","Paper","Typography","Button","TextField","makeStyles","form","useState","Link","axios","Navbar","useStyles","body","padding","margin","inputBox","width","submitButton","backgroundColor","color","LinkColor","textDecoration","Login","props","classes","email","setEmail","password","setPassword","error","setError","loading","setLoading","submitHandler","e","preventDefault","config","headers","data","post","localStorage","response","message","target","value"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n  form,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from './Navbar';\n\n// makeStyles use for CSS\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    // console.log(email, password);\n\n    try {\n      const config = {\n        headers: { 'Content-type': 'application/json' },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.post(\n        'api/users/login',\n        { email, password },\n        config\n      );\n\n      localStorage;\n      setLoading(false);\n    } catch (e) {\n      setError(e.response.data.message);\n    }\n  };\n\n  return (\n    // Paper use as container , elevation - for shadow\n\n    <form onSubmit={submitHandler}>\n      <Paper elevation={3} className={classes.body}>\n        <Navbar />\n        <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n          <Grid item>\n            {/*  Typography use for size or different heading tag */}\n\n            <Typography variant=\"h4\" component=\"h2\">\n              Login\n            </Typography>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"txtEmailId\"\n              type=\"text\"\n              label=\"Email\"\n              className={classes.inputBox}\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"txtPassword\"\n              type=\"password\"\n              label=\"Password\"\n              className={classes.inputBox}\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              id=\"btnLogin\"\n              variant=\"contained\"\n              type=\"submit\"\n              className={classes.submitButton}\n            >\n              Login\n            </Button>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle2\">\n              <Link to=\"/Signup\" className={classes.LinkColor}>\n                Create an Account?\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      //{' '}\n    </form>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}