{"ast":null,"code":"var _jsxFileName = \"/home/cool/Desktop/Parthvi/References/try2/try2-navbar/FrontEnd/src/component/Recruiter/AddJob.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Paper, Typography, Button, TextField, makeStyles, FormControl, Select, MenuItem, InputLabel, Chip } from '@material-ui/core';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from '../Navbar'; // makeStyles use for CSS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px'\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px'\n  },\n  submitButton: {\n    width: '300px',\n    margin: '0px 15px',\n    backgroundColor: '#034f84',\n    color: 'white'\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black'\n  }\n}));\n\nconst AddJob = () => {\n  _s();\n\n  const classes = useStyles(); // const handleSubmit = (e) => {\n  //   // e.preventDefault();\n  //   // console.log(jobTypes);\n  //   // console.log(e.target.value);\n  //   // setJobType();\n  //   const url = 'http://localhost:5000/users/register';\n  //   axios\n  //     .post(url, {\n  //       jobType: jobTypes,\n  //       // types: user.types,\n  //     })\n  //     .then((res) => {\n  //       console.log(res.user);\n  //     });\n  // };\n  // const skills = [\n  //   { skills: 'node', id: 1 },\n  //   { skills: 'react', id: 2 },\n  //   { skills: 'angular', id: 3 },\n  //   { skills: 'php', id: 4 },\n  //   { skills: 'asp.net', id: 5 },\n  //   { skills: 'python', id: 6 },\n  // ];\n\n  const [jobDetail, setjobDetail] = useState({\n    title: '',\n    skill: '',\n    jobType: '',\n    salary: 0,\n    position: 0\n  });\n\n  const submitHandler = () => {\n    console.log(jobDetail); // console.log(e.target.value);\n    // setJobType();\n\n    const url = 'http://localhost:5000/users/register';\n    axios.post(url, {\n      jobType: jobTypes // types: user.types,\n\n    }).then(res => {\n      console.log(res.user);\n    });\n  };\n\n  const inputHandler = (key, value) => {\n    // e.preventDefault();\n    setjobDetail({ ...jobDetail,\n      [key]: value\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // Paper use as container , elevation - for shadow\n    _jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.body,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 4,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h2\",\n            children: \"Add Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"title\",\n            type: \"text\",\n            label: \"Title\",\n            className: classes.inputBox,\n            value: jobDetail.title,\n            onChange: event => {\n              inputHandler('title', event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"skill\",\n            type: \"text\",\n            label: \"Skill\",\n            className: classes.inputBox,\n            value: jobDetail.skill,\n            onChange: event => {\n              inputHandler('skill', event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            className: classes.inputBox,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Job Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"jobtype\",\n              value: jobDetail.jobType,\n              onChange: event => {\n                inputHandler('jobType', event.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                disabled: true,\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Full Time\",\n                children: \"Full Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Part Time\",\n                children: \"Part Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"salary\",\n            type: \"text\",\n            label: \"Salary\",\n            className: classes.inputBox,\n            value: jobDetail.salary,\n            onChange: event => {\n              inputHandler('salary', event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"position\",\n            type: \"position\",\n            label: \"Position\",\n            className: classes.inputBox,\n            value: jobDetail.position,\n            onChange: event => {\n              inputHandler('position', event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnSubmit\",\n            variant: \"contained\",\n            type: \"submit\",\n            className: classes.submitButton,\n            onClick: submitHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(AddJob, \"SnGmWQLM6XlbqLe3SiRCiTwasAs=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddJob;\nexport default AddJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["/home/cool/Desktop/Parthvi/References/try2/try2-navbar/FrontEnd/src/component/Recruiter/AddJob.js"],"names":["React","Grid","Paper","Typography","Button","TextField","makeStyles","FormControl","Select","MenuItem","InputLabel","Chip","Multiselect","useState","useEffect","Link","axios","Navbar","useStyles","body","padding","margin","inputBox","width","submitButton","backgroundColor","color","LinkColor","textDecoration","AddJob","classes","jobDetail","setjobDetail","title","skill","jobType","salary","position","submitHandler","console","log","url","post","jobTypes","then","res","user","inputHandler","key","value","event","target"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Chip,\n} from '@material-ui/core';\n\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Navbar from '../Navbar';\n\n// makeStyles use for CSS\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '0px 15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst AddJob = () => {\n  const classes = useStyles();\n\n  // const handleSubmit = (e) => {\n  //   // e.preventDefault();\n  //   // console.log(jobTypes);\n  //   // console.log(e.target.value);\n  //   // setJobType();\n  //   const url = 'http://localhost:5000/users/register';\n  //   axios\n  //     .post(url, {\n  //       jobType: jobTypes,\n  //       // types: user.types,\n  //     })\n  //     .then((res) => {\n  //       console.log(res.user);\n  //     });\n  // };\n\n  // const skills = [\n  //   { skills: 'node', id: 1 },\n  //   { skills: 'react', id: 2 },\n  //   { skills: 'angular', id: 3 },\n  //   { skills: 'php', id: 4 },\n  //   { skills: 'asp.net', id: 5 },\n  //   { skills: 'python', id: 6 },\n  // ];\n\n  const [jobDetail, setjobDetail] = useState({\n    title: '',\n    skill: '',\n    jobType: '',\n    salary: 0,\n    position: 0,\n  });\n\n  const submitHandler = () => {\n    console.log(jobDetail);\n\n    // console.log(e.target.value);\n    // setJobType();\n    const url = 'http://localhost:5000/users/register';\n    axios\n      .post(url, {\n        jobType: jobTypes,\n        // types: user.types,\n      })\n      .then((res) => {\n        console.log(res.user);\n      });\n  };\n  const inputHandler = (key, value) => {\n    // e.preventDefault();\n    setjobDetail({\n      ...jobDetail,\n      [key]: value,\n    });\n  };\n\n  return (\n    // Paper use as container , elevation - for shadow\n    <Paper elevation={3} className={classes.body}>\n      <Navbar />\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          {/*  Typography use for size or different heading tag */}\n          <Typography variant=\"h4\" component=\"h2\">\n            Add Jobs\n          </Typography>\n        </Grid>\n\n        <Grid item>\n          <TextField\n            id=\"title\"\n            type=\"text\"\n            label=\"Title\"\n            className={classes.inputBox}\n            value={jobDetail.title}\n            onChange={(event) => {\n              inputHandler('title', event.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            id=\"skill\"\n            type=\"text\"\n            label=\"Skill\"\n            className={classes.inputBox}\n            value={jobDetail.skill}\n            onChange={(event) => {\n              inputHandler('skill', event.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <FormControl fullWidth className={classes.inputBox}>\n            <InputLabel>Job Type</InputLabel>\n            <Select\n              id=\"jobtype\"\n              value={jobDetail.jobType}\n              onChange={(event) => {\n                inputHandler('jobType', event.target.value);\n              }}\n            >\n              <MenuItem disabled value=\"\">\n                Select\n              </MenuItem>\n              <MenuItem value=\"Full Time\">Full Time</MenuItem>\n              <MenuItem value=\"Part Time\">Part Time</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item>\n          <TextField\n            id=\"salary\"\n            type=\"text\"\n            label=\"Salary\"\n            className={classes.inputBox}\n            value={jobDetail.salary}\n            onChange={(event) => {\n              inputHandler('salary', event.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            id=\"position\"\n            type=\"position\"\n            label=\"Position\"\n            className={classes.inputBox}\n            value={jobDetail.position}\n            onChange={(event) => {\n              inputHandler('position', event.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <Button\n            id=\"btnSubmit\"\n            variant=\"contained\"\n            type=\"submit\"\n            className={classes.submitButton}\n            onClick={submitHandler}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default AddJob;\n"]},"metadata":{},"sourceType":"module"}