{"ast":null,"code":"var _jsxFileName = \"/home/cool/Desktop/Parthvi/References/try2/try2-navbar/src/component/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Paper, Typography, Button, TextField, makeStyles } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect, useRef } from 'react';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px'\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px'\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white'\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black'\n  }\n}));\n\nconst ResetPassword = props => {\n  _s();\n\n  const classes = useStyles();\n  const emailRef = useRef();\n  const url = 'http://localhost:5000/users/emailsend';\n  const [user, setUser] = useState({\n    email: ''\n  });\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    axios.post(url, {\n      email: user.email,\n      data: {\n        email: emailRef.current.value\n      }\n    }).then(res => {\n      console.log(res.user);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.body,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 4,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h2\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            ref: emailRef,\n            className: classes.inputBox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnSubmit\",\n            variant: \"contained\",\n            className: classes.submitButton,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"Fkr5XbdprFRwnsMHIYtpbdwtSvs=\", false, function () {\n  return [useStyles];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/home/cool/Desktop/Parthvi/References/try2/try2-navbar/src/component/ResetPassword.js"],"names":["Grid","Paper","Typography","Button","TextField","makeStyles","Link","axios","useState","useEffect","useRef","Navbar","useStyles","body","padding","margin","inputBox","width","submitButton","backgroundColor","color","LinkColor","textDecoration","ResetPassword","props","classes","emailRef","url","user","setUser","email","submitHandler","e","preventDefault","post","data","current","value","then","res","console","log"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  TextField,\n  makeStyles,\n} from '@material-ui/core';\n\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect, useRef } from 'react';\n\nimport Navbar from './Navbar';\n\nconst useStyles = makeStyles(() => ({\n  body: {\n    padding: '60px 60px',\n    margin: '125px 350px',\n  },\n  inputBox: {\n    width: '300px',\n    margin: '-12px',\n  },\n  submitButton: {\n    width: '300px',\n    margin: '15px',\n    backgroundColor: '#034f84',\n    color: 'white',\n  },\n  LinkColor: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n}));\n\nconst ResetPassword = (props) => {\n  const classes = useStyles();\n\n  const emailRef = useRef();\n\n  const url = 'http://localhost:5000/users/emailsend';\n\n  const [user, setUser] = useState({\n    email: '',\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    axios\n      .post(url, {\n        email: user.email,\n        data: { email: emailRef.current.value },\n      })\n      .then((res) => {\n        console.log(res.user);\n      });\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <Paper elevation={3} className={classes.body}>\n        <Navbar />\n        <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h2\">\n              Reset Password\n            </Typography>\n          </Grid>\n          {/* <Grid item>\n          <TextField\n            id=\"txtPassword\"\n            type=\"password\"\n            label=\"Password\"\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"txtConfirmPassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            className={classes.inputBox}\n          />\n        </Grid> */}\n          <Grid item>\n            <TextField\n              id=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              ref={emailRef}\n              className={classes.inputBox}\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              id=\"btnSubmit\"\n              variant=\"contained\"\n              className={classes.submitButton}\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </form>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}